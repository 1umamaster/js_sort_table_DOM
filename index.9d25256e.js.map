{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCqDA,SAAS,gBAAgB,CAAC,QAAS,SAAC,CAApC,EAC4B,OAAtB,EAAG,MAAM,CAAC,OAAO,EACnB,AA9BJ,SAAmB,CAAO,EACxB,GAAI,AAAoB,OAApB,EAAQ,OAAO,CAAW,CAC5B,I,EAAM,EAAM,EAAQ,WAAW,CAAC,WAAW,GACrC,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAO,A,C,A,C,S,C,E,G,M,O,C,G,O,E,E,C,E,EAAG,EAAM,gBAAgB,CAAC,Q,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,EAAO,GAAG,CAAC,SAAC,CAAnD,EA1BF,IAGQ,EACI,EACE,EACO,EANf,EA0BuD,MAxBtD,CACL,KAAM,AAAA,CAAA,AAAQ,OAAR,CAAA,EAAA,CAHF,EAAQ,AA0BwD,EA1BpD,gBAAgB,CAAC,MAGtB,CAAC,EAAE,AAAF,GAAN,AAAA,KAAA,IAAA,EAAA,KAAA,EAAA,EAAU,WAAW,CAAC,IAAI,EAAA,GAAM,KACtC,SAAU,AAAA,CAAA,AAAQ,OAAR,CAAA,EAAA,CAAK,CAAC,EAAE,AAAF,GAAN,AAAA,KAAA,IAAA,EAAA,KAAA,EAAA,EAAU,WAAW,CAAC,IAAI,EAAA,GAAM,KAC1C,IAAK,OAAA,AAAe,OAAR,CAAA,EAAA,CAAK,CAAC,EAAE,AAAF,GAAN,AAAA,KAAA,IAAA,EAAA,KAAA,EAAA,EAAU,WAAW,CAAC,IAAI,KAAO,KAC7C,OAAQ,WAAA,AAAmB,OAAR,CAAA,EAAA,CAAK,CAAC,EAAE,AAAF,GAAN,AAAA,KAAA,IAAA,EAAA,KAAA,EAAA,EAAU,WAAW,CAAC,OAAO,CAAC,QAAS,MAAQ,IACpE,C,GAqBE,EAAI,IAAI,CAAC,SAAC,CAAA,CAAG,CAAb,EAAmB,OAjBjB,AAiB8B,CAjB7B,CAiBmC,EAjB9B,CAAG,AAiBwB,CAjBvB,CAiB0B,EAjBrB,CACV,GAGL,AAa8B,CAb7B,CAamC,EAb9B,CAAG,AAawB,CAbvB,CAa0B,EAbrB,CACV,EAGF,C,GAWL,EAAM,SAAS,CAAG,GAElB,EAAI,OAAO,CAAC,SAAC,CAAb,EACE,IAAM,EAAS,SAAS,aAAa,CAAC,MAEtC,OAAO,MAAM,CAAC,GAAK,OAAO,CAAC,SAAC,CAAA,CAAM,CAAlC,EACE,IAAM,EAAO,SAAS,aAAa,CAAC,KAEpC,CAAA,EAAK,WAAW,CACd,AAAU,IAAV,GAAe,AAAgB,UAAhB,OAAO,EAClB,IAAiC,MAAA,CAA7B,EAAK,cAAc,CAAC,UACxB,EACN,EAAO,WAAW,CAAC,EACrB,GAEA,EAAM,WAAW,CAAC,EACpB,EACF,CACF,EAIc,EAAG,MAAM,CAEvB","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["'use strict';\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nfunction rowToObj(row) {\n    var _cells_, _cells_1, _cells_2, _cells_3;\n    var cells = row.querySelectorAll('td');\n    return {\n        name: ((_cells_ = cells[0]) === null || _cells_ === void 0 ? void 0 : _cells_.textContent.trim()) || null,\n        position: ((_cells_1 = cells[1]) === null || _cells_1 === void 0 ? void 0 : _cells_1.textContent.trim()) || null,\n        age: Number((_cells_2 = cells[2]) === null || _cells_2 === void 0 ? void 0 : _cells_2.textContent.trim()) || null,\n        salary: parseFloat((_cells_3 = cells[3]) === null || _cells_3 === void 0 ? void 0 : _cells_3.textContent.replace(/[$,]/g, '')) || null\n    };\n}\nfunction sortTableArr(a, b, col) {\n    if (a[col] < b[col]) return -1;\n    if (a[col] > b[col]) return 1;\n    return 0;\n}\nfunction sortTable(element) {\n    if (element.tagName === 'TH') {\n        var col = element.textContent.toLowerCase();\n        var tbody = document.querySelector('tbody');\n        var arr = _to_consumable_array(tbody.querySelectorAll('tr')).map(function(row) {\n            return rowToObj(row);\n        });\n        arr.sort(function(a, b) {\n            return sortTableArr(a, b, col);\n        });\n        tbody.innerHTML = '';\n        arr.forEach(function(obj) {\n            var newRow = document.createElement('tr');\n            Object.values(obj).forEach(function(data, index) {\n                var cell = document.createElement('td');\n                cell.textContent = index === 3 && typeof data === 'number' ? \"$\".concat(data.toLocaleString('en-US')) : data;\n                newRow.appendChild(cell);\n            });\n            tbody.appendChild(newRow);\n        });\n    }\n}\ndocument.addEventListener('click', function(ev) {\n    if (ev.target.tagName === 'TH') sortTable(ev.target);\n});\n\n//# sourceMappingURL=index.9d25256e.js.map\n","'use strict';\n\nfunction rowToObj(row) {\n  const cells = row.querySelectorAll('td');\n\n  return {\n    name: cells[0]?.textContent.trim() || null,\n    position: cells[1]?.textContent.trim() || null,\n    age: Number(cells[2]?.textContent.trim()) || null,\n    salary: parseFloat(cells[3]?.textContent.replace(/[$,]/g, '')) || null,\n  };\n}\n\nfunction sortTableArr(a, b, col) {\n  if (a[col] < b[col]) {\n    return -1;\n  }\n\n  if (a[col] > b[col]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction sortTable(element) {\n  if (element.tagName === 'TH') {\n    const col = element.textContent.toLowerCase();\n    const tbody = document.querySelector('tbody');\n    const arr = [...tbody.querySelectorAll('tr')].map((row) => rowToObj(row));\n\n    arr.sort((a, b) => sortTableArr(a, b, col));\n\n    tbody.innerHTML = '';\n\n    arr.forEach((obj) => {\n      const newRow = document.createElement('tr');\n\n      Object.values(obj).forEach((data, index) => {\n        const cell = document.createElement('td');\n\n        cell.textContent =\n          index === 3 && typeof data === 'number'\n            ? `$${data.toLocaleString('en-US')}`\n            : data;\n        newRow.appendChild(cell);\n      });\n\n      tbody.appendChild(newRow);\n    });\n  }\n}\n\ndocument.addEventListener('click', (ev) => {\n  if (ev.target.tagName === 'TH') {\n    sortTable(ev.target);\n  }\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","document","addEventListener","ev","target","tagName","sortTable","element","col","textContent","toLowerCase","tbody","querySelector","_to_consumable_array","_array_without_holes","isArray","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","map","row","_cells_","_cells_1","_cells_2","_cells_3","cells","trim","position","age","Number","salary","parseFloat","replace","sort","a","b","innerHTML","forEach","obj","newRow","createElement","values","data","index","cell","concat","toLocaleString","appendChild"],"version":3,"file":"index.9d25256e.js.map"}